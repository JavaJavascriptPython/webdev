awk '
{
    accountNumber = substr($0, 12, 12)   # Extract account number from position 12 to 23 (12 characters)
    transactionType = substr($0, 1, 12)  # Extract transaction type from position 0 to 11 (12 characters)
    amount = substr($0, 24)              # Extract amount starting from position 24 till the end

    if (prev_account && accountNumber != prev_account) {
        print prev_account "," balance >> "account_balances.txt"
        balance = 0
    }

    balance += (transactionType == "credit" ? amount : -amount)
    prev_account = accountNumber
}
END {
    if (prev_account) {
        print prev_account "," balance >> "account_balances.txt"
    }
}
' sorted_transactions.txt


ðŸ˜‚









Adjusted ApproachHereâ€™s how you can handle fixed-width fields:Sort the File by Account Number: Sort the file using the sort command. You need to specify the start and end positions for the account number field (in your case, positions 12 to 23):sort -k1.12,1.23 transactions.txt -o sorted_transactions.txtProcess Each Account Incrementally: Modify the awk script to handle fixed-width fields. The script will extract the account number and transaction type based on their positions.awk '
{
    accountNumber = substr($0, 12, 12)   # Extract account number from position 12 to 23 (12 characters)
    transactionType = substr($0, 1, 12)  # Extract transaction type from position 0 to 11 (12 characters)
    amount = substr($0, 24)              # Extract amount starting from position 24 till the end

    if (prev_account && accountNumber != prev_account) {
        print prev_account "," balance >> "account_balances.txt"
        balance = 0
    }

    balance += (transactionType == "credit" ? amount : -amount)
    prev_account = accountNumber
}
END {
    if (prev_account) {
        print prev_account "," balance >> "account_balances.txt"
    }
}
' sorted_transactions.txtExplanation:substr($0, 12, 12): Extracts the substring for the account number from positions 12 to 23.substr($0, 1, 12): Extracts the transaction type from positions 0 to 11.substr($0, 24): Extracts the amount starting from position 24 to the end of the line.The rest of the script logic remains the same, processing the file line by line and aggregating the balance for each account number.Output: The script will output the account balances to account_balances.txt, just as before